{% assign treeRoot = include.dir | default '/' %}
{% capture tree %}<<{{treeRoot}}>>{% endcapture %}

{% assign treeDepth = 5 %}

{% assign space = '' %}
{% capture newLine %}
{% endcapture %}

{% assign ulClass = include.ulClass %}
{% assign liClass = include.liClass %}
{% assign aClass = include.aClass %}

{% for n in (1..treeDepth) %} {% comment %} <--- Max Depth {% endcomment %}
    {%- comment -%} === iteration {{n}} ===<br> {%- endcomment -%}
    
    {% assign newTasksCount = 0 %}

    {%- comment -%} Parse input to find <<dir>> tags {%- endcomment -%}
    {% assign parts = tree | split: '<<' %}
    {% assign last = parts.size | minus: 1 %}
    {% for i in (0..last) %}

        {% assign part = parts[i] %}

        {% if i == 0 %}{% assign tree = part %}{% else %}
            {% assign parts2 = part | split: '>>' %} 
            {% assign dir = parts2[0] %}  {% comment %} dir from <<dir>> tag {% endcomment %}


            {% assign task = nil %}
            {% assign filesCount = 0 %}

            {% comment %} find all subfolders {% endcomment %}
            {% for p in site.pages %}
                {% comment %} пропускать файлы без заголовка {% endcomment %}
                {% if p.title == nil %}{% continue %}{% endif %}  


                {% comment %} посчитать количество файлов вэтой папке {% endcomment %}
                {% if p.dir == dir %}{% assign filesCount = filesCount | plus: 1 %}{% endif %}  

                {% comment %} If this is the last iteration - don't search subfolders {% endcomment %}
                {% if n == treeDepth %}{% continue %}{% endif %}  

                {% comment %} проверить это файл в дочерней папке или нет  {% endcomment %}
                {% assign test = p.dir | split: dir %}
                {% if test.size > 1 %}

                    {% assign dirPathPart = test[1] | split: '/' %}
                    {% capture dirname %}{{dir}}{{dirPathPart[0]}}/{% endcapture %}
                    {% comment %} * {{ dirname | url_decode }} <br> {% endcomment %}

                    {% comment %} если такой субфолдер еще не был найден до этого {% endcomment %}
                    {% unless subfoldersArr contains dirname %}
                        {% assign f = dirname | split: '*' %}
                        {% assign subfoldersArr = subfoldersArr | concat: f }} %}
                        
                        {% comment %} append <<dir>> tag to use during next iteration {% endcomment %}
                        {% capture task %}{{task}}<<{{dirname}}>>{% endcapture %}                      
                        
                    {% endunless %}                    
                {% endif %} 
            {% endfor %}
            {% if task != nil %}{% assign newTasksCount = newTasksCount | plus: 1 %}{% endif %}
            
           
                   
            {% capture ulClassTag %}{% if ulClass != nil %}{{space}}{:{{ulClass}}}{{newLine}}{% endif %}{% endcapture %}      
            

            {% capture itemLink %}[{% include dirname.liquid dir=dir %} ({{filesCount}})]({{dir}}){:{{aClass}}}{% endcapture %}        
            {% capture tree %}{{tree}}{{space}}- {:{{liClass}}} {{itemLink}} {{newLine}}{{task}}{{ulClassTag}}{{parts2[1]}}{% endcapture %}
            
           

        {% endif %}


    {% endfor %} {% comment %} folders within level iteration end {% endcomment %}

    

    {% if newTasksCount == 0 %}{% break %}{% endif %} {% comment %} <--- early exit {% endcomment %}
    {% assign space = space | append: '    ' %}

{% endfor %} {% comment %} levels iteration end {% endcomment %}

{%- comment -%} 

<textarea style="width:100%; height: 150px; font-size: 10px;">{{tree}}</textarea>

<hr>
<textarea style="width:100%; height: 300px; font-size: 10px;">{{ tree | markdownify | strip }}</textarea>



{%- endcomment -%}

<hr>

{{ tree | markdownify | strip }}